/*Query a count of the number of cities in CITY having a Population larger than .*/

select count(*) from city where population >100000;

/* Query the total population of all cities in CITY where District is California.*/

select sum(population) from city where district='California';

/* Query the average population of all cities in CITY where District is California. */

select avg(population)from city where district='California';

/* Query the average population for all cities in CITY, rounded down to the nearest integer.*/

select round(avg(population))from city; 

/* Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.*/

select sum(population) from city where countrycode='jpn';

/*Query the difference between the maximum and minimum populations in CITY. */

select max(population)-min(population) from city;

/* Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table, but did not realize her keyboard's  key was broken until after completing the calculation. She wants your help finding the difference between her miscalculation (using salaries with any zeroes removed), and the actual average salary.

Write a query calculating the amount of error (i.e. actual-miscalculation:  average monthly salaries), and round it up to the next integer. */

select ceil(avg(salary)-avg(replace(salary,'0',''))) from employees;

/* We define an employee's total earnings to be their monthly salary x monthly worked, and the maximum total earnings to be the maximum total earnings for any employee in the Employee table. Write a query to find the maximum total earnings for all employees as well as the total number of employees who have maximum total earnings. Then print these values as 2 space-separated integers.*/

SELECT salary * months AS earnings, COUNT(*)
FROM Employee
GROUP BY earnings
ORDER BY earnings DESC
LIMIT 1;

/* Query the following two values from the STATION table:

The sum of all values in LAT_N rounded to a scale of 2 decimal places.
The sum of all values in LONG_W rounded to a scale of 2 decimal places. */

select round(sum(lat_n),2),round(sum(long_w),2)from station;


/* Query the sum of Northern Latitudes (LAT_N) from STATION having values greater 38.7880 than 137.2345  and less than . Truncate your answer to 2 decimal places.*/

select round(sum(lat_n),4) from station where lat_n > 38.788 and lat_n < 137.2345;

/*Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345 . Truncate your answer to 4 decimal places. */

select round(lat_n,4) from station where lat_n <137.2345 order by lat_n desc limit 1;

/*Query the Western Longitude (LONG_W) for the largest Northern Latitude (LAT_N) in STATION that is less than 137.2345. Round your answer to 4 decimal places. */

select round(long_w,4) from station where lat_n<137.2345 order by lat_n desc limit 1;


/* Query the smallest Northern Latitude (LAT_N) from STATION that is greater than 38.778. Round your answer to 4 decimal places.*/

select round(lat_n,4) from station where lat_n > 38.778 order by lat_n limit 1;


/* Query the Western Longitude (LONG_W)where the smallest Northern Latitude (LAT_N) in STATION is greater than 38.778 . Round your answer to 4 decimal places.*/

select round(long_w,4) from station where lat_n > 38.778 order by lat_n limit 1;


/* Enter your query here.
Consider P1(a,b) and P2(c,d) to be two points on a 2D plane.

a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).
b happens to equal the minimum value in Western Longitude (LONG_W in STATION).
c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).
d happens to equal the maximum value in Western Longitude (LONG_W in STATION).
Query the Manhattan Distance between points  and  and round it to a scale of 4 decimal places */


select round(max(lat_n)-min(lat_n),4)+round(max(long_w)-min(long_w),4) from station;


/* Consider P1(a,b) and P2(c,d) to be two points on a 2D plane.

a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).
b happens to equal the minimum value in Western Longitude (LONG_W in STATION).
c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).
d happens to equal the maximum value in Western Longitude (LONG_W in STATION).

Query the Euclidean Distance between points  and  and round it to a scale of 4 decimal places */

select round(sqrt(power(max(lat_n)-min(lat_n),2)+power(max(long_w)-min(long_w),2)),4) from station;


/*A median is defined as a number separating the higher half of a data set from the lower half. Query the median of the Northern Latitudes (LAT_N) from STATION and round your answer to 4 decimal places. */


select round(avg(s.lat_n),4)
from station s
where (select count(s1.lat_n)
      from station s1
      where s1.lat_n < s.lat_n) = (select count(s2.lat_n)
                                   from station s2
                                  where s2.lat_n >s.lat_n);

                                  
/* */

/* */

/* */

